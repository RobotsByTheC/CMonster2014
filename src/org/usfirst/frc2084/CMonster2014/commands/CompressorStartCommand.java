/* 
 * Copyright (c) 2014 RobotsByTheC. All rights reserved.
 *
 * Open Source Software - may be modified and shared by FRC teams. The code must
 * be accompanied by the BSD license file in the root directory of the project.
 */
package org.usfirst.frc2084.CMonster2014.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2084.CMonster2014.Robot;
import org.usfirst.frc2084.CMonster2014.RobotMap;

/**
 * Starts the compressor thread. This thread monitors the state of the pressure
 * sensor and turns the compressor on or off accordingly.
 *
 * @author Ben Wolsieffer
 */
public class CompressorStartCommand extends Command {

    public CompressorStartCommand() {
        // This command requires the compressor subsytem for semantic purposes,
        // not because it actually needs to. The compressor subsystem consists of
        // the compressor and nothing else.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.compressorSubsystem);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    /**
     * Does nothing.
     */
    protected void initialize() {
    }

    /**
     * Starts the compressor thread. This only runs once because
     * {@link #isFinished()} always returns true. It could also probably be
     * moved to {@link #initialize()}.
     */
    protected void execute() {
        RobotMap.compressorSubsystemCompressor.start();
    }

    /**
     * This command should immediately finish, so this method always return
     * true.
     *
     * @return true
     */
    protected boolean isFinished() {
        return true;
    }

    /**
     * Does nothing.
     */
    protected void end() {
    }

    /**
     * Does nothing.
     */
    protected void interrupted() {
    }
}
