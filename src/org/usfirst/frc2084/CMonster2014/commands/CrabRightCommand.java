/* 
 * Copyright (c) 2014 RobotsByTheC. All rights reserved.
 *
 * Open Source Software - may be modified and shared by FRC teams. The code must
 * be accompanied by the BSD license file in the root directory of the project.
 */
package org.usfirst.frc2084.CMonster2014.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2084.CMonster2014.Robot;
import org.usfirst.frc2084.CMonster2014.subsystems.DriveSubsystem;

/**
 * Command that drives the robot right sideways. We don't use it anymore with
 * our new control algorithm.
 *
 * @author Ben Wolsieffer
 */
public class CrabRightCommand extends Command {

    public CrabRightCommand() {
        // This command drives, so it requires the drive subsystem.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveSubsystem);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    /**
     * Does nothing.
     */
    protected void initialize() {
    }

    /**
     * Drives the robot sideways right at {@value DriveSubsystem#CRAB_SPEED}
     * power.
     */
    protected void execute() {
        Robot.driveSubsystem.getRobotDrive().crab(-DriveSubsystem.CRAB_SPEED);
    }

    /**
     * This command never finished, but can be interrupted.
     *
     * @return false
     */
    protected boolean isFinished() {
        return false;
    }

    /**
     * Stops the motors.
     */
    protected void end() {
        Robot.driveSubsystem.getRobotDrive().stopMotor();
    }

    /**
     * Stops the motors.
     */
    protected void interrupted() {
        end();
    }
}
