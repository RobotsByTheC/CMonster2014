// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc2084.CMonster2014.subsystems;
import org.usfirst.frc2084.CMonster2014.RobotMap;
import org.usfirst.frc2084.CMonster2014.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *
 */
public class DriveSubsystem extends Subsystem {
    public static final double CRAB_SPEED = 0.6;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController frontLeftJaguar = RobotMap.driveSubsystemFrontLeftJaguar;
    SpeedController frontRightJaguar = RobotMap.driveSubsystemFrontRightJaguar;
    SpeedController rearLeftJaguar = RobotMap.driveSubsystemRearLeftJaguar;
    SpeedController rearRightJaguar = RobotMap.driveSubsystemRearRightJaguar;
    Gyro steeringGyro = RobotMap.driveSubsystemSteeringGyro;
    Encoder rearRightEncoder = RobotMap.driveSubsystemRearRightEncoder;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    TempSensor steeringGyroTemp = RobotMap.driveSubsystemSteeringGyroTemp;
    ADXL345_I2C accelerometer = RobotMap.driveSubsystemAccelerometer;
    private BestRobotDrive robotDrive;
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new FieldCentricMecanumDriveCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        robotDrive = new BestRobotDrive(frontLeftJaguar, rearLeftJaguar, frontRightJaguar, rearRightJaguar);
        robotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        robotDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        steeringGyro.setPIDSourceParameter(PIDSource.PIDSourceParameter.kAngle);
    }
    public BestRobotDrive getRobotDrive() {
        return robotDrive;
    }
}
